{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","axios","get","then","response","data","newObject","post","id","put","Notification","message","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","Footer","style","color","fontStyle","fontSize","map","i","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","console","log","target","type","ReactDOM","render","document","getElementById"],"mappings":"gNAceA,G,MAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAE3B,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,M,gBCS3B,EAfA,WAEb,OADgBK,IAAMC,IAHR,cAICC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KARR,aAQsBD,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAbF,aAaE,YAAwBD,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCD5BK,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACK,KAIP,yBAAKb,UAAU,SACZa,ICqGMC,EAxGH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAC5B,iBAHc,mBAETG,EAFS,KAEAC,EAFA,OAKcJ,oBAAS,GALvB,mBAKTK,EALS,KAKAC,EALA,OAMwBN,mBAAS,MANjC,mBAMTO,EANS,KAMKC,EANL,KAShBC,qBAAU,WACRC,IAECpB,MAAK,SAAAqB,GACNT,EAASS,QAER,IAEH,IA0CMC,EAAcP,EAAUJ,EAAQA,EAAMY,QAAO,SAAAhC,GAAI,OAAuB,IAAnBA,EAAKG,aAE1D8B,EAAS,WAOb,OACE,yBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKR,6BACA,uGAKN,OACE,6BACE,qCACA,kBAAC,EAAD,CAAcpB,QAASS,IACvB,6BACE,4BAAQpB,QAAS,kBAAMmB,GAAYD,KAAnC,QACMA,EAAU,YAAc,QAGhC,4BACGO,EAAYO,KAAI,SAACtC,EAAMuC,GAAP,OACf,kBAAC,EAAD,CAAMC,IAAKD,EAAGvC,KAAMA,EACpBC,iBAAkB,kBAvEC,SAAAa,GACzB,IAAMd,EAAOoB,EAAMqB,MAAK,SAAAC,GAAC,OAAIA,EAAE5B,KAAOA,KAChC6B,EAAW,2BAAQ3C,GAAR,IAAcG,WAAYH,EAAKG,YAEhD0B,EACQf,EAAI6B,GACXlC,MAAK,SAAAmC,GACJvB,EAASD,EAAMkB,KAAI,SAAAtC,GAAI,OAAIA,EAAKc,KAAOA,EAAKd,EAAO4C,SAEpDC,OAAM,SAAAC,GACLnB,EAAgB,SAAD,OACJ3B,EAAKK,QADD,sCAGb0C,YAAW,WACTpB,EAAgB,QACf,KACFN,EAASD,EAAMY,QAAO,SAAAU,GAAC,OAAIA,EAAE5B,KAAOA,SAuDXkC,CAAmBhD,EAAKc,WAIpD,0BAAMmC,SAlDM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjB/C,QAASiB,EACT+B,MAAM,IAAIC,MAAOC,cACjBpD,UAAWqD,KAAKC,SAAW,IAI7B5B,EACUuB,GACP3C,MAAK,SAAAmC,GACJvB,EAASD,EAAMsC,OAAOd,IACtBrB,EAAW,SAsCX,2BACEoC,MAAOrC,EACPsC,SA1DiB,SAACV,GACxBW,QAAQC,IAAIZ,EAAMa,OAAOJ,OACzBpC,EAAW2B,EAAMa,OAAOJ,UA0DpB,4BAAQK,KAAK,UAAb,SAEF,kBAAC/B,EAAD,QCpGNgC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.da394155.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <li className='note'>\r\n      {note.content} \r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { \r\n  getAll, \r\n  create, \r\n  update \r\n}","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport './index.css'\r\nimport Note from './components/Note'\r\nimport noteService from './services/notes'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {  \r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState(    \r\n    'a new note...'  \r\n  ) \r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  \r\n  useEffect(() => {\r\n    noteService\r\n    .getAll()\r\n    .then(initialNotes => {        \r\n    setNotes(initialNotes)\r\n  })\r\n  }, [])\r\n    \r\n  const toggleImportanceOf = id => {\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = { ...note, important: !note.important }\r\n  \r\n    noteService      \r\n    .update(id, changedNote)      \r\n    .then(returnedNote => {        \r\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))      \r\n    })\r\n    .catch(error => {     \r\n      setErrorMessage(          \r\n        `Note '${note.content}' was already removed from server`        \r\n        )        \r\n        setTimeout(() => {          \r\n          setErrorMessage(null)        \r\n        }, 5000)   \r\n         setNotes(notes.filter(n => n.id !== id))    \r\n        })\r\n  }\r\n\r\n  const handleNoteChange = (event) => {    \r\n    console.log(event.target.value)    \r\n    setNewNote(event.target.value)  \r\n  }\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() > 0.5,\r\n    }\r\n  \r\n    \r\n    noteService      \r\n      .create(noteObject)      \r\n      .then(returnedNote => {        \r\n        setNotes(notes.concat(returnedNote))     \r\n        setNewNote('')      \r\n      })\r\n  }\r\n\r\n  const notesToShow = showAll ? notes : notes.filter(note => note.important === true)\r\n\r\n  const Footer = () => {\r\n    const footerStyle = {\r\n      color: 'green',\r\n      fontStyle: 'italic',\r\n      fontSize: 16\r\n    }\r\n  \r\n    return (\r\n      <div style={footerStyle}>\r\n        <br />\r\n        <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n      <div>        \r\n        <button onClick={() => setShowAll(!showAll)}>          \r\n        show {showAll ? 'important' : 'all' }        \r\n        </button>\r\n      </div>            \r\n      <ul>\r\n        {notesToShow.map((note, i) =>\r\n          <Note key={i} note={note} \r\n          toggleImportance={() => toggleImportanceOf(note.id)}\r\n          />\r\n        )}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input \r\n          value={newNote} \r\n          onChange={handleNoteChange}\r\n        />        \r\n        <button type=\"submit\">save</button>\r\n      </form>   \r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}